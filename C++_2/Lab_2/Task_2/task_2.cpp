#include "task_2.h"  // Подключение заголовочного файла, содержащего определение класса Worker
#include <vector>    // Подключение библиотеки для работы с векторами (динамическими массивами)
int main()
{
	setlocale(LC_ALL, "RU");  // Установка локали для поддержки русского языка в консоли
	Worker worker_1("Petrov", 75000, 1990);  // Создание объекта worker_1 с параметрами: фамилия "Petrov", оклад 75000, год рождения 1990
	worker_1.print();  // Вывод информации о worker_1
	worker_1.age();    // Вычисление и вывод возраста worker_1
	worker_1.days_until_50();  // Вычисление и вывод количества дней до 50 лет для worker_1
	int count;  // Переменная для хранения количества работников
	std::vector<Worker> workers;  // Создание вектора для хранения объектов класса Worker
	std::cout << "\n\nВведите количество работников: ";  // Запрос на ввод количества работников
	std::cin >> count;  // Считывание количества работников
	if (count <= 0)  // Проверка на корректность введенного количества
	{
		std::cout << "Некорректное количество пар!\n";  // Вывод сообщения об ошибке
		return 1;  // Завершение программы с кодом ошибки
	}
	std::cout << "Заполните информацию о работниках:\n";  // Запрос на ввод информации о работниках
	for (int i = 0; i < count; ++i)  // Цикл для ввода данных о каждом работнике
	{
		std::string second_name;  // Переменная для хранения фамилии
		double salary;            // Переменная для хранения оклада
		int year_on_birth;        // Переменная для хранения года рождения

		std::cout << "\nОбъект #" << i + 1 << std::endl;  // Вывод номера текущего работника
		std::cout << "Введите фамилию: ";  // Запрос на ввод фамилии
		std::cin >> second_name;  // Считывание фамилии
		std::cout << "Введите сумму оклада: ";  // Запрос на ввод оклада
		std::cin >> salary;  // Считывание оклада
		std::cout << "Введите год рождения: ";  // Запрос на ввод года рождения
		std::cin >> year_on_birth;  // Считывание года рождения

		workers.emplace_back(second_name, salary, year_on_birth);  // Добавление нового объекта Worker в вектор
	}
	std::cout << "\nРезультаты:\n";  // Вывод заголовка для результатов
	for (int i = 0; i < workers.size(); ++i)  // Цикл для вывода информации о каждом работнике
	{
		std::cout << "\nОбъект #" << i + 1 << std::endl;  // Вывод номера текущего работника
		workers[i].print();  // Вывод информации о работнике
		workers[i].age();    // Вычисление и вывод возраста работника
		workers[i].days_until_50();  // Вычисление и вывод количества дней до 50 лет
	}
}