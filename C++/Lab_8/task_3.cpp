#include <iostream> // Подключение библиотеки для ввода-вывода
#include <queue>    // Подключение библиотеки для работы с очередями
#include <vector>   // Подключение библиотеки для работы с векторами
using namespace std; // Использование пространства имен std
int main() // Точка входа в программу
{
	setlocale(LC_ALL, "RU"); // Установка локали для вывода текста на русском языке
	vector<int> numbers = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }; // Инициализация вектора чисел
	queue<int> odd_queue; // Создание очереди для нечетных индексов
	queue<int> even_queue; // Создание очереди для четных индексов
	int last_odd = 0; // Переменная для хранения последнего элемента нечетной очереди
	int last_even = 0; // Переменная для хранения последнего элемента четной очереди
	for (int i = 0; i < numbers.size(); ++i) // Цикл по всем элементам вектора
	{
		if (i % 2 == 0) // Проверка, является ли индекс четным
		{
			odd_queue.push(numbers[i]); // Добавление элемента в нечетную очередь
			last_odd = numbers[i]; // Обновление последнего элемента нечетной очереди
		}
		else // Если индекс нечетный
		{
			even_queue.push(numbers[i]); // Добавление элемента в четную очередь
			last_even = numbers[i]; // Обновление последнего элемента четной очереди
		}
	}
	cout << "Нечетная очередь:\n"; // Вывод заголовка для нечетной очереди
	cout << "Начало: " << odd_queue.front() << endl; // Вывод первого элемента нечетной очереди
	cout << "Конец: " << last_odd << endl; // Вывод последнего элемента нечетной очереди
	cout << "\nЧетная очередь:\n"; // Вывод заголовка для четной очереди
	cout << "Начало: " << even_queue.front() << endl; // Вывод первого элемента четной очереди
	cout << "Конец: " << last_even << endl; // Вывод последнего элемента четной очереди
}
