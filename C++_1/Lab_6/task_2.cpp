#include <iostream> // Подключение библиотеки для ввода-вывода
using namespace std; // Использование пространства имен std
struct Domino // Определение структуры Domino
{
	int left;  // Левая часть домино
	int right; // Правая часть домино
};
void fill_dominoes(Domino dominoes[]) // Функция для заполнения массива домино значениями, введенными пользователем
{
	for (int i = 0; i < 28; ++i) // Цикл для заполнения 28 домино
	{
		cout << "Введите левую и правую части для кости " << i + 1 << ":\n"; // Запрос у пользователя ввода левой и правой частей для текущего домино
		cin >> dominoes[i].left >> dominoes[i].right; // Чтение введенных значений и сохранение их в соответствующие поля структуры
	}
}
bool check_dominoes(Domino dominoes[]) // Функция для проверки правильности выставления домино
{
	for (int i = 0; i < 27; ++i) // Цикл для проверки всех домино, кроме последнего
	{
		if (dominoes[i].right != dominoes[i + 1].left)
		{
			return false; // Если правая часть текущего домино не равна левой части следующего домино, возвращаем false
		}
	}
	return true; // Если все домино выставлены правильно, возвращаем true
}
int main() // Функция для выполнения задачи №2
{
	setlocale(LC_ALL, "RUS"); // Установка локали для корректного отображения русских символов
	Domino dominoes[28]; // Создание массива из 28 домино
	fill_dominoes(dominoes); // Заполнение массива домино значениями, введенными пользователем
	if (check_dominoes(dominoes)) // Проверка правильности выставления домино
	{
		cout << "\nКости выставлены правильно\n"; // Если домино выставлены правильно, выводим соответствующее сообщение
	}
	else
	{
		cout << "\nКости выставлены неправильно\n"; // Если домино выставлены неправильно, выводим соответствующее сообщение
	}
	return 0; // Возврат 0, указывающий на успешное завершение программы
}