#include <iostream> // Объявление библиотеки для использования потоков ввода-вывода
using namespace std; // Подключение пространства имён std
bool symmetric(int num)
{
	int orig = num; // Сохраняем оригинальное число для последующего сравнения
	int rev = 0; // Инициализируем переменную для хранения перевернутого числа
	while (num > 0) // Цикл продолжается, пока число больше 0
	{
		rev = rev * 10 + num % 10; // Добавляем последнюю цифру num к rev
		num /= 10; // Удаляем последнюю цифру из num
	}
	return orig == rev; // Проверяем, равно ли оригинальное число перевернутому
}
void f4_22()
{
	int n; // Объявляем переменную для хранения количества вводимых чисел
	cout << "Enter the number of numbers: "; // Запрашиваем у пользователя ввод
	cin >> n; // Считываем количество вводимых чисел от пользователя
	int maxs = 0, maxns = 0; // Инициализируем счетчики для максимальных последовательностей симметричных и несимметричных чисел
	int cs = 0, cns = 0; // Инициализируем счетчики для текущих симметричных и несимметричных последовательностей
	for (int i = 0; i < n; ++i) // Цикл по количеству вводимых чисел
	{
		int num; // Объявляем переменную для хранения текущего числа
		cout << "Enter a number " << (i + 1) << ": "; // Запрашиваем у пользователя ввести число
		cin >> num; // Считываем число от пользователя
		if (symmetric(num)) // Проверяем, является ли текущее число симметричным
		{
			cs++; // Увеличиваем счетчик симметричных чисел
			maxs = max(maxs, cs); // Обновляем максимальное количество симметричных чисел, если текущий больше
			cns = 0; // Сбрасываем счетчик несимметричных чисел, так как мы нашли симметричное число
		}
		else // Если число не симметричное
		{
			cns++; // Увеличиваем счетчик несимметричных чисел
			maxns = max(maxns, cns); // Обновляем максимальное количество несимметричных чисел, если текущий больше
			cs = 0; // Сбрасываем счетчик симметричных чисел, так как мы нашли несимметричное число
		}
	}
	cout << "\nThe maximum number of symmetric numbers in a row: " << maxs << endl;
	// Выводим максимальное количество симметричных чисел
	cout << "\nThe maximum number of non-symmetric numbers in a row: " << maxns << endl;
	// Выводим максимальное количество несимметричных чисел
}
int main() // Начало основной функции программы
{
	float a, b, c, d; // Объявление переменных для хранения значений
	cout << "Enter the variables:" << endl << " " << endl;  // Вывод сообщения для пользователя
	cout << "Variable 1 - "; cin >> a; // Запрос ввода первой переменной
	cout << "Variable 2 - "; cin >> b; // Запрос ввода второй переменной
	cout << "Variable 3 - "; cin >> c; // Запрос ввода третьей переменной
	cout << "Variable 4 - "; cin >> d; // Запрос ввода четвертой переменной
	int nomer; // Объявление переменной для хранения номера задачи
	cout << " " << endl << "Specify the task number: "; cin >> nomer; // Запрос ввода номера задачи от пользователя
	switch (nomer) // Использование оператора switch для выбора задачи по номеру
	{
	case 422: f4_22(); break; // Если введён номер 422, вызывается функция f4_22 без переменных
	default: cout << "The task was not found";
		// Если введён номер, который не соответствует ни одной задаче, выводится сообщение об ошибке
	}
	return 0; // Возврат 0
}