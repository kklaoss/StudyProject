#include <iostream> // Объявление библиотеки для использования потоков ввода-вывода
using namespace std; // Подключение пространства имён std
double getC(int n)
{
	double c = 1.0; // Инициализируем коэффициент значением 1.0
	int sign = (n % 2 == 0) * 1 + (n % 2 != 0) * -1; // Определяем знак: 1 для четных n, -1 для нечетных
	for (int i = 2; i < n; ++i) // Цикл для вычисления (n - 1)!
	{
		c *= i; // Умножаем коэффициент на i для вычисления факториала
	}
	c = sign * (n + 1) / c; // Вычисляем окончательный коэффициент
	return c; // Возвращаем вычисленный коэффициент
}
double sum3(double x, int n)
{
	double sum = 0.0; // Инициализируем сумму значением 0.0
	double term = 1.0; // Начальное значение для x^0, равное 1
	for (int i = 1; i <= n; ++i) // Цикл для вычисления суммы первых n членов
	{
		term *= x; // Умножаем на x для получения следующего члена ряда
		double c = getC(i); // Получаем коэффициент для текущего члена
		sum += c * term; // Добавляем текущий член к сумме
	}
	return sum; // Возвращаем итоговую сумму
}
double sum4(double x, double eps)
{
	double sum = 0.0; // Инициализируем сумму значением 0.0
	double term = 1.0; // Начальное значение для x^0, равное 1
	double pSum = -1.0; // Инициализация предыдущей суммы для входа в цикл
	int i = 1; // Счетчик для членов ряда
	while ((sum - pSum >= eps) + (sum - pSum <= -eps)) // Цикл продолжается, пока разница между текущей и предыдущей суммой больше eps
	{
		pSum = sum; // Сохраняем текущее значение суммы как предыдущую
		term *= x; // Умножаем на x для получения следующего члена ряда
		double c = getC(i); // Получаем коэффициент для текущего члена
		sum += c * term; // Добавляем текущий член к сумме
		++i; // Увеличиваем счетчик
	}
	return sum; // Возвращаем итоговую сумму
}
void f4_13(double x, int n, double eps)
{
	cout << "\nThe sum of the first " << n << " members of the series: " << sum3(x, n);
	// Выводим сумму первых n членов ряда
	cout << "\nThe amount accurate to " << eps << ": " << sum4(x, eps) << endl;
	// Выводим сумму с точностью, заданной параметром eps
}
int main() // Начало основной функции программы
{
	float a, b, c, d; // Объявление переменных для хранения значений
	cout << "Enter the variables:" << endl << " " << endl;  // Вывод сообщения для пользователя
	cout << "Variable 1 - "; cin >> a; // Запрос ввода первой переменной
	cout << "Variable 2 - "; cin >> b; // Запрос ввода второй переменной
	cout << "Variable 3 - "; cin >> c; // Запрос ввода третьей переменной
	cout << "Variable 4 - "; cin >> d; // Запрос ввода четвертой переменной
	int nomer; // Объявление переменной для хранения номера задачи
	cout << " " << endl << "Specify the task number: "; cin >> nomer; // Запрос ввода номера задачи от пользователя
	switch (nomer) // Использование оператора switch для выбора задачи по номеру
	{
	case 413: f4_13(a, b, c); break; // Если введён номер 413, вызывается функция f4_12 с переменной a, b, c
	default: cout << "The task was not found";
		// Если введён номер, который не соответствует ни одной задаче, выводится сообщение об ошибке
	}
	return 0; // Возврат 0
}