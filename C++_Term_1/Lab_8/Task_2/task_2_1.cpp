#include <iostream> // Подключение библиотеки для ввода-вывода
#include <forward_list> // Подключение библиотеки для использования односвязного списка
using namespace std; // Использование пространства имен std
void enqueue(forward_list<double>& queue, double value) // Функция для добавления элемента в очередь
{
	queue.push_front(value); // Добавление элемента в начало очереди
}
void dequeue(forward_list<double>& queue) // Функция для удаления элемента из очереди
{
	if (!queue.empty()) // Проверка, не пуста ли очередь
	{
		queue.pop_front(); // Удаление элемента из начала очереди
	}
}
void print_queue(const forward_list<double>& queue) // Функция для вывода содержимого очереди
{
	for (const auto& value : queue) // Перебор всех элементов очереди
	{
		cout << value << " "; // Вывод элемента очереди
	}
	cout << endl; // Переход на новую строку
}
double sum_queue(const forward_list<double>& queue) // Функция для вычисления суммы элементов очереди
{
	double sum = 0.0; // Инициализация суммы
	for (const auto& value : queue) // Перебор всех элементов очереди
	{
		sum += value; // Добавление значения элемента к сумме
	}
	return sum; // Возврат суммы
}
int main() // Главная функция программы
{
	setlocale(LC_ALL, "RU"); // Установка локали для вывода на русском языке
	forward_list<double> queue; // Создание пустой очереди
	enqueue(queue, 2.1); // Добавление числа 2.1 в очередь
	enqueue(queue, 2.1); // Добавление числа 2.1 в очередь
	enqueue(queue, 5.3); // Добавление числа 5.3 в очередь
	cout << "Содержимое очереди после добавления чисел 2.1, 2.1, 5.3:\n"; // Вывод сообщения
	print_queue(queue); // Вывод содержимого очереди
	dequeue(queue); // Удаление одного элемента из очереди
	cout << "Содержимое очереди после удаления одного элемента:\n"; // Вывод сообщения
	print_queue(queue); // Вывод содержимого очереди
	enqueue(queue, 4.9); // Добавление числа 4.9 в очередь
	cout << "Содержимое очереди после добавления числа 4.9:\n"; // Вывод сообщения
	print_queue(queue); // Вывод содержимого очереди
	double sum = sum_queue(queue); // Вычисление суммы элементов очереди
	cout << "Сумма элементов очереди:\n" << sum << endl; // Вывод суммы элементов очереди
}