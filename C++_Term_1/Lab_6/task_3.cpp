#include <iostream> // Подключение библиотеки для ввода-вывода
using namespace std; // Использование пространства имен std

struct Coordinates // Определение структуры Coordinates
{
	double x; // Координата X
	double y; // Координата Y
};
struct Circle // Определение структуры Circle
{
	double radius; // Радиус окружности
	Coordinates center; // Центр окружности (координаты X и Y)
};
int main() // Функция для выполнения задачи №3
{
	setlocale(LC_ALL, "RUS"); // Установка локали для корректного отображения русских символов
	Circle circles[10]; // Массив для хранения 10 окружностей
	Circle filtered_circles[10]; // Массив для хранения отфильтрованных окружностей
	int filtered_count = 0; // Счетчик для отфильтрованных окружностей
	for (int i = 0; i < 10; ++i) // Цикл для ввода данных 10 окружностей
	{
		cout << "Введите радиус окружности " << i + 1 << ": "; // Запрос ввода радиуса
		cin >> circles[i].radius; // Ввод радиуса
		cout << "Введите координату X центра окружности " << i + 1 << ": "; // Запрос ввода координаты X центра
		cin >> circles[i].center.x; // Ввод координаты X центра
		cout << "Введите координату Y центра окружности " << i + 1 << ": "; // Запрос ввода координаты Y центра
		cin >> circles[i].center.y; // Ввод координаты Y центра
		cout << endl; // Переход на новую строку
	}
	for (int i = 0; i < 10; ++i) // Цикл для фильтрации окружностей с радиусом больше 1
	{
		if (circles[i].radius > 1) // Проверка, больше ли радиус 1
		{
			filtered_circles[filtered_count] = circles[i]; // Добавление окружности в массив отфильтрованных
			filtered_count++; // Увеличение счетчика отфильтрованных окружностей
		}
	}
	cout << "Окружности с радиусом больше 1:\n" << endl; // Вывод заголовка для отфильтрованных окружностей
	for (int i = 0; i < filtered_count; ++i) // Цикл для вывода отфильтрованных окружностей
	{
		cout << "Окружность " << i + 1 << ": " << endl; // Вывод номера окружности
		cout << "Радиус: " << filtered_circles[i].radius << endl; // Вывод радиуса окружности
		cout << "Центр (X, Y): (" << filtered_circles[i].center.x << ", " << filtered_circles[i].center.y << ")\n\n"; // Вывод координат центра окружности
	}
	return 0; // Возврат 0, указывающий на успешное завершение программы
}