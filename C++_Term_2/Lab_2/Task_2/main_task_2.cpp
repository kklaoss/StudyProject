// Подключение стандартной библиотеки ввода/вывода
#include <iostream>
// Подключение стандартной библиотеки для работы с векторами
#include <vector>
// Подключение заголовочного файла с объявлением класса Worker
#include "task_2.h"
// Главная функция программы
int main()
{
	// Установка русской локали для корректного отображения кириллицы
	setlocale(LC_ALL, "RU");
	// Создание объекта worker_1 с параметрами ("Petrov", 75000, 1990)
	Worker worker_1("Petrov", 75000, 1990);
	// Вывод информации о worker_1
	worker_1.print();
	// Вычисление и вывод возраста worker_1
	worker_1.age();
	// Вычисление и вывод дней до 50-летия worker_1
	worker_1.days_until_50();
	// Переменная для хранения количества работников
	int count;
	// Вектор для хранения объектов Worker
	std::vector<Worker> workers;
	// Запрос количества работников у пользователя
	std::cout << "\n\nВведите количество работников: ";
	std::cin >> count;
	// Проверка корректности введенного количества
	if (count <= 0)
	{
		// Вывод сообщения об ошибке, если количество не положительное
		std::cout << "Некорректное количество!" << std::endl;
		// Возврат кода ошибки
		return 1;
	}
	// Резервируем память для всех объектов
	workers.reserve(count);
	// Запрос на ввод информации о работниках
	std::cout << "Заполните информацию о работниках:" << std::endl;
	// Цикл для ввода информации о каждом работнике
	for (int i = 0; i < count; ++i)
	{
		// Переменные для временного хранения вводимых данных
		std::string name;
		double salary;
		int year;
		// Вывод номера текущего работника
		std::cout << "\nОбъект #" << i + 1 << std::endl;
		// Запрос фамилии работника
		std::cout << "Введите фамилию: ";
		std::cin >> name;
		// Запрос зарплаты работника
		std::cout << "Введите оклад: ";
		std::cin >> salary;
		// Запрос года рождения работника
		std::cout << "Введите год рождения: ";
		std::cin >> year;
		// Добавление нового объекта Worker в вектор
		workers.emplace_back(name, salary, year);
	}
	// Вывод заголовка для раздела с результатами
	std::cout << "\nРезультаты:" << std::endl;
	// Цикл для вывода информации о всех работниках
	for (size_t i = 0; i < workers.size(); ++i)
	{
		// Вывод номера текущего работника
		std::cout << "\nОбъект #" << i + 1 << std::endl;
		// Вывод информации о работнике
		workers[i].print();
		// Вычисление и вывод возраста работника
		workers[i].age();
		// Вычисление и вывод дней до 50-летия работника
		workers[i].days_until_50();
		// Переход на новую строку для красоты вывода
		std::cout << std::endl;
	}
}